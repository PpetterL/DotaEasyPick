# This is a basic workflow to help you get started with Actions

name: Request and Parse 100k Matches

# Controls when the workflow will run
on: 
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  set-environment:
    # The type of runner that the job will run on
    name: Set Environment
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Code
        uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!
      
      
      - name: Put MSYS2_MinGW32 on PATH
        run: echo "C:/msys64/mingw32/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        
      - name: Put MSYS2 on PATH
        run: echo "C:/msys64" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        
      - name: Put Pacman etc. on PATH
        run: echo "C:/msys64/usr/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        
      - name: MSYS2_Echo_Test
        run: C:/msys64/usr/bin/bash.exe -c "echo 'Running in MSYS2!'"
                
      - name: MSYS2 Pacman Upgrade
        run: C:/msys64/usr/bin/bash.exe -c 'pacman -Syu --noconfirm'
        
      - name: MSYS2 Pacman Install Devel and MinGW
        run: C:/msys64/usr/bin/bash.exe -c 'pacman -S --needed base-devel mingw-w64-i686-gcc --noconfirm'
        
      - name: Config OpenSSL
        run: C:/msys64/usr/bin/bash.exe -c '(cd openssl-3.0.2 && perl Configure mingw no-shared no-asm --prefix=$GITHUB_WORKSPACE)'
        
      - name: Make Depend OpenSSL
        run: C:/msys64/usr/bin/bash.exe -c '(cd openssl-3.0.2 && make depend)'
        
      - name: Make OpenSSL
        run: C:/msys64/usr/bin/bash.exe -c '(cd openssl-3.0.2 && make)'
        
      - name: Make Install OpenSSL
        run: C:/msys64/usr/bin/bash.exe -c '(cd openssl-3.0.2 && make install)'
        
      - name: Config, Make and Make Install zlib
        run: C:/msys64/usr/bin/bash.exe -c '(cd zlib-1.2.12 && make -f win32/Makefile.gcc -k BINARY_PATH=$GITHUB_WORKSPACE/bin INCLUDE_PATH=$GITHUB_WORKSPACE/include LIBRARY_PATH=$GITHUB_WORKSPACE/lib)'
        
      - name: Config libcurl
        run: C:/msys64/usr/bin/bash.exe -c '(cd libcurl-7.82.0 && ./configure --with-openssl --prefix=$GITHUB_WORKSPACE)'
        
      - name: Make libcurl
        run: C:/msys64/usr/bin/bash.exe -c '(cd libcurl-7.82.0 && make)'
        
      - name: Make Install libcurl
        run: C:/msys64/usr/bin/bash.exe -c '(cd libcurl-7.82.0 && make install)'
        
      - name: Compile main.exe
        run: gcc.exe -Wall -o errorlog -fdiagnostics-color=always -g -Wl,--stack=268435456 main.c -lcurl -DCURL_STATICLIB -lws2_32 -lwldap32 -lwinmm -lgdi32 -o main.exe
