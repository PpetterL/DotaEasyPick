# This is a basic workflow to help you get started with Actions

name: Request and Parse 100k Matches

# Controls when the workflow will run
on: 
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  schedule:
    - cron: '0 0/6 * * *'

concurrency:
    group: request-and-parse

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  set-environment:
    # The type of runner that the job will run on
    name: Set Environment
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout Code
        uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!
      
      - name: Put MSYS2_MinGW32 on PATH
        run: echo "C:/msys64/mingw32/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        
      - name: Put MSYS2 on PATH
        run: echo "C:/msys64" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        
      - name: Put Pacman etc. on PATH
        run: echo "C:/msys64/usr/bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
        
      - name: MSYS2_Echo_Test
        run: C:/msys64/usr/bin/bash.exe -c 'echo $GITHUB_WORKSPACE'
                
      - name: MSYS2 Pacman Upgrade
        run: C:/msys64/usr/bin/bash.exe -c 'pacman -Syu --noconfirm'
        
      - name: MSYS2 Pacman Install Devel and MinGW
        run: C:/msys64/usr/bin/bash.exe -c 'pacman -Sy --needed base-devel mingw-w64-i686-gcc --noconfirm'
        
      - name: Config OpenSSL
        run: C:/msys64/usr/bin/bash.exe -c '(cd openssl-3.0.2 && perl Configure mingw no-shared no-asm enable-capieng -lcrypt32 --prefix=D:/a/DotaEasyPick/DotaEasyPick --openssldir=D:/a/DotaEasyPick/DotaEasyPick)'
        
      - name: Make Depend OpenSSL
        run: C:/msys64/usr/bin/bash.exe -c '(cd openssl-3.0.2 && make depend)'
        
      - name: Make OpenSSL
        run: C:/msys64/usr/bin/bash.exe -c '(cd openssl-3.0.2 && make)'
        
      - name: Make Install OpenSSL
        run: C:/msys64/usr/bin/bash.exe -c '(source /etc/profile && cd $GITHUB_WORKSPACE/openssl-3.0.2 && make install_sw)'
        
      - name: Config, Make and Make Install zlib
        run: C:/msys64/usr/bin/bash.exe -c '(cd zlib-1.2.12 && make -f win32/Makefile.gcc -k BINARY_PATH=/d/a/DotaEasyPick/DotaEasyPick/bin INCLUDE_PATH=/d/a/DotaEasyPick/DotaEasyPick/include LIBRARY_PATH=/d/a/DotaEasyPick/DotaEasyPick/lib)'
        
      - name: MSYS2_list_pkgconfig_files
        run: C:/msys64/usr/bin/bash.exe -c '(cd lib/pkgconfig && ls -a)'     
     
      - name: Config libcurl
        run: C:/msys64/usr/bin/bash.exe -c '(cd curl-7.82.0 && env PKG_CONFIG_PATH=$GITHUB_WORKSPACE/lib/pkgconfig ./configure --with-zlib=D:/a/DotaEasyPick/DotaEasyPick --with-openssl=D:/a/DotaEasyPick/DotaEasyPick --prefix=/d/a/DotaEasyPick/DotaEasyPick LIBS="-lcrypt32")'
        
      - name: Make libcurl
        run: C:/msys64/usr/bin/bash.exe -c '(cd curl-7.82.0 && make)'
        
      - name: Make Install libcurl
        run: C:/msys64/usr/bin/bash.exe -c '(cd curl-7.82.0 && make install)'
        
      - name: Copy jsmn.h to include
        run: Copy-Item 'D:/a/DotaEasyPick/DotaEasyPick/jsmn/jsmn.h' 'D:/a/DotaEasyPick/DotaEasyPick/include/jsmn.h'
        
      - name: Show directories
        run: (ls && cd include && ls && cd ../lib && ls)
        
      - name: Compile main.exe
        run: gcc.exe --% -Wall -o errorlog -fdiagnostics-color=always -static -g -I./include** -L./lib -Wl,--stack,268435456 main.c -lcurl -DCURL_STATICLIB -lwldap32 -lwinmm -lgdi32 -lzstd -lz -lssl -lcrypto -lcrypt32 -lws2_32 -o main.exe

      - name: Run main.exe
        env: 
            STEAM_API_KEY: ${{ secrets.STEAM_API_KEY }}
        run: .\main.exe "$env:STEAM_API_KEY"
        
      - name: Commit files
        run: |
            git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git config --local user.name "github-actions[bot]"
            git fetch
            git merge
            git add match_seq_num.txt Wins.json
            git commit -m "Autoupdate match_seq_num.txt and Wins.json"
        shell: bash
        
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
            github_token: ${{ secrets.GITHUB_TOKEN }}
